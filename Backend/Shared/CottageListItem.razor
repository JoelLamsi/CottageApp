<MatCard class="mat-card" style="max-width: 500px; margin-bottom: 10px;">
    <div class="mat-card-content" style="margin-left: 20px; margin-top: 20px;">
        <MatHeadline5 class="mat-card-clean-margin">@cottage.Title</MatHeadline5>
    </div>
    <MatCardContent>
        <MatCardMedia Wide="true" ImageUrl="@cottage.PictureUrl"></MatCardMedia>
        <MatBody1 class="mat-card-content mat-card-clean-margin" style="margin-left: 20px; margin-top: 20px; margin-right: 20px;">
            <p style="text-overflow: clip;">@cottage.Description</p>
            <small>@cottage.DateAdded.Date.ToString("dd.M.yyyy")</small><br />
            
            @for (var i = 0; i < 5; i++)
            {
                if (i < cottage.AvgRating)
                {
                    <MatIcon Icon="star_rate" Style="color: #fcc00a"></MatIcon>;
                }
            }
            
        </MatBody1>
    </MatCardContent>
    <MatCardActions>
        <MatButton OnClick="@OpenReservationDialog">Make a Reservation</MatButton>
    </MatCardActions>
</MatCard>

<MatDialog @bind-IsOpen="@dialogIsOpen" CanBeClosed="true">
    <MatDialogContent>
        <MatHeadline5 class="mat-card-clean-margin">@cottage.Title</MatHeadline5>
        <label>Check-In</label>
        <MatDatePicker @bind-Value="@checkInDate"></MatDatePicker><br/>
        <label>Check-Out</label>
        <MatDatePicker @bind-Value="@checkOutDate"></MatDatePicker><br/>
        
        <MatButton OnClick="@(() => dialogIsOpen = false)">Cancel</MatButton>
        <MatButton id="okButton" OnClick="@SaveReservation" Unelevated="true">Ok</MatButton>
    </MatDialogContent>
</MatDialog>

@code {
    [Parameter] public Cottage cottage { get; set; }
    public Reservation Reservation { get; set; }
    bool dialogIsOpen = false;

    DateTime checkInDate = DateTime.Now;
    DateTime checkOutDate = DateTime.Now;

    decimal totalPrice = 0.00m;
    
    void OpenReservationDialog()
    {
        dialogIsOpen = true;
        Reservation = new Reservation();
        Reservation.CheckInDate = DateTime.Now;
        ReservationState rs = new ReservationState();
        rs.Cottage = cottage;
        TimeSpan interval = checkOutDate - checkInDate;
        Reservation.TotalPrice = interval.Days * cottage.CostPerDay;
        totalPrice = Reservation.TotalPrice;
    }

    void SaveReservation()
    {
        Console.WriteLine("Yes, this works like trains' toilet");
    }
}