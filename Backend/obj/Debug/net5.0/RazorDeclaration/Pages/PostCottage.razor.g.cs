// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Backend.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Backend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Backend.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using Backend.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\joell\dev\CottageApp-master\Backend\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\joell\dev\CottageApp-master\Backend\Pages\PostCottage.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\joell\dev\CottageApp-master\Backend\Pages\PostCottage.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\joell\dev\CottageApp-master\Backend\Pages\PostCottage.razor"
using System.Text.Json.Serialization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/postcottage")]
    public partial class PostCottage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 69 "C:\Users\joell\dev\CottageApp-master\Backend\Pages\PostCottage.razor"
       
    private Cottage cottage { get; set; }
    //private Person owner { get; set; }
    string fileContent;

    protected override void OnInitialized()
    {
        cottage = new Cottage();
        //owner = new Person();
        cottage.PictureUrl = "/Pictures/empty.PNG";
        
        //owner.HomeAddress = new Address();
        base.OnInitialized();
    }

    private async Task Save()
    {
        cottage.DateAdded = DateTime.Now;
        
        using (var fs = new FileStream("wwwroot/data/cottages.json", FileMode.Create))
        {
            await JsonSerializer.SerializeAsync(fs, cottage);
            Console.WriteLine("Saved to: " + fs.Name);
        }
    }

    private void Invalid()
    {

    }

    private async Task UploadImage(IMatFileUploadEntry[] files)
    {
        Console.WriteLine("Uploading...");
        try
        {
            var file = files.FirstOrDefault();
            if (file != null)
            {
                Console.WriteLine(file.Type);
                var imgName = file.Name;
                if (!String.IsNullOrEmpty(imgName))
                {
                    cottage.PictureUrl = $"/Pictures/{imgName}";
                }

                cottage.PictureUrl = $"/Pictures/{file.Name}";

                using (var ms = new MemoryStream())
                {
                    Console.WriteLine(file.Size);
                    await file.WriteToStreamAsync(ms);

                    if (ms.Length > 1024 * 1024)
                    {
                        Console.WriteLine("Bar");
                        fileContent = "";
                        fileContent += $"Name:\t{file.Name}\r\n";
                        fileContent += $"Type:\t{file.Type}\r\n";
                        fileContent += $"LastModified:\t{file.LastModified}\r\n";
                        fileContent += $"Size:\t{file.Size}\r\n";
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 131 "C:\Users\joell\dev\CottageApp-master\Backend\Pages\PostCottage.razor"
                                                                                                              
                    }
                    else
                    {
                        ms.Seek(0, SeekOrigin.Begin);
                        using (var reader = new System.IO.StreamReader(ms))
                        {
                            fileContent = await reader.ReadToEndAsync();

                            using (var fs = new FileStream($"/dev/CottageApp/Backend/wwwroot/img/{file.Name}", FileMode.Create, FileAccess.ReadWrite))
                            {
                                byte[] bytes = new byte[ms.Length];
                                ms.Read(bytes, 0, (int)ms.Length);
                                fs.Write(bytes, 0, bytes.Length);
                                var img = System.Drawing.Image.FromStream(ms);

                                //img.Save($"/dev/CottageApp/Backend/wwwroot/Pictures/{file.Name}", img.RawFormat);
                                img.Save(ms, img.RawFormat);

                                Console.WriteLine();
                                ms.Close();
                            }
                        }
                    }
                }
            }
            else
            {
                Console.WriteLine("File null");
            }
        }
 
        catch (Exception e)
        {
            fileContent = $"Error:\r\n{e.Message}\r\n{e.StackTrace}";
        }
        finally
        {
            await InvokeAsync(StateHasChanged);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
